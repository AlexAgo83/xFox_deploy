package com.aura.deploy.swing.panel;

import java.awt.GridBagConstraints;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.List;

import javax.swing.JButton;

import com.aura.deploy.DeployWindowClient;
import com.aura.deploy.swing.AbstractDeployPanel;

public class DeployPanelMenu extends AbstractDeployPanel {
	private static final long serialVersionUID = 1L;
	public DeployPanelMenu(DeployWindowClient win) {
		super(win);
		initialize();
	}
	
	private void initialize() {
		this.groupButtons = new ArrayList<JButton>();
		
		add(getBtCreateGame(), createGbc(0, 0, GridBagConstraints.HORIZONTAL));
		add(getBtJoinGame(), createGbc(1, 0, GridBagConstraints.HORIZONTAL));
		add(getBtOption(), createGbc(2, 0, GridBagConstraints.HORIZONTAL));
		add(getBtExit(), createGbc(3, 0, GridBagConstraints.HORIZONTAL));
	}
	
	private List<JButton> groupButtons;
	public void resetButton(JButton bt) {
		for (JButton b: groupButtons)
			b.setContentAreaFilled(true);
		bt.setContentAreaFilled(false);
	}
	
	@Override public void m2v() {}
	
	private JButton btCreateGame;
	public JButton getBtCreateGame() {
		if (btCreateGame == null) {
			btCreateGame = new JButton("Create game");
			btCreateGame.addActionListener(new ActionListener() {
				@Override
				public void actionPerformed(ActionEvent e) {
					getWindow().showCreate();
					resetButton(getBtCreateGame());
				}
			});
			groupButtons.add(btCreateGame);
		}
		return btCreateGame;
	}
	
	private JButton btJoinGame;
	public JButton getBtJoinGame() {
		if (btJoinGame == null) {
			btJoinGame = new JButton("Join game");
			btJoinGame.addActionListener(new ActionListener() {
				@Override
				public void actionPerformed(ActionEvent e) {
					getWindow().showJoin();
					resetButton(getBtJoinGame());
				}
			});
			groupButtons.add(btJoinGame);
		}
		return btJoinGame;
	}
	
	private JButton btOption;
	public JButton getBtOption() {
		if (btOption == null) {
			btOption = new JButton("Option");
			btOption.addActionListener(new ActionListener() {
				@Override
				public void actionPerformed(ActionEvent e) {
					getWindow().showOption();
					resetButton(getBtOption());
				}
			});
			groupButtons.add(btOption);
		}
		return btOption;
	}
	
	private JButton btExit;
	public JButton getBtExit() {
		if (btExit == null) {
			btExit = new JButton("Exit");
			btExit.addActionListener(new ActionListener() {
				@Override
				public void actionPerformed(ActionEvent e) {
					resetButton(getBtExit());
					getWindow().close(true);
				}
			});
			groupButtons.add(btExit);
		}
		return btExit;
	}
}